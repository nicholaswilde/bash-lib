#!/usr/bin/env bash
: "${LIBBASH_DIR:?LIBBASH_DIR must be set. Please source libbash/init before other libraries.}"

#------------------------------ Global Variables ------------------------------

LIBBASH_DELIMITER=${LIBBASH_DELIMITER:-","}

#------------------------------ Private Functions -----------------------------

#------------------------------ Public Functions ------------------------------

# Convert string to lower case
function lb_to_lower(){
  lb_check_args_num "${@}" 1
  printf '%s\n' "${1,,}"
}

# Convert string to upper case
function lb_to_upper(){
  lb_check_args_num "${@}" 1
  printf '%s\n' "${1^^}"
}

# Remove the last character
function lb_rm_last_char(){
  lb_check_args_num "${@}" 1
  printf '%s\n' "${1::-1}"
}

# Get the last character
function lb_get_last_char(){
  lb_check_args_num "${@}" 1
  printf '%s\n' "${1: -1}"
}

# Get the length of a variable
function lb_length(){
  lb_check_args_num "${@}" 1
  printf '%s\n' "${#1}"
}

# Replace a string
function lb_replace(){
  lb_check_args_num "${@}" 3
  printf '%s\n' "${1/$2/$3}"
}

function lb_reverse_case() {
  lb_check_args_num "${@}" 1
  printf '%s\n' "${1~~}"
}

function lb_split(){
  if [[ "${#@}" != 1 ]] && [[ "${#@}" != 2 ]]; then
    lb_fail "$(printf "expected 1 or 2 args but got %s\n" "${#@}")"
  fi
  # Default delimiter
  delim=${2:-${LIBBASH_DELIMITER}}
  IFS=$'\n' read -d "" -ra arr <<< "${1//$delim/$'\n'}"
  printf '%s\n' "${arr[@]}"
}

function lb_trim(){
  lb_check_args_num "${@}" 1
  : "${1#"${1%%[![:space:]]*}"}"
  : "${_%"${_##*[![:space:]]}"}"
  printf '%s\n' "$_"
}

function lb_trim_all(){
  lb_check_args_num "${@}" 1
  if [[ "$-" = *f* ]]; then
    is_set="false"
  else
    is_set="true"
  fi
  set -f
  # shellcheck disable=SC2048,SC2086
  set -- $*
  printf '%s\n' "$*"
  if [[ "${is_set}" == "false" ]]; then
    set +f
  fi
}

function lb_trim_quotes(){
  lb_check_args_num "${@}" 1
  : "${1//\'}"
  printf '%s\n' "${_//\"}"
}
